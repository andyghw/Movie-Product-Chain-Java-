/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.MovieManufacture;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.TheaterEnterprise;
import Business.Movie.Movie;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.TheaterManagerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestForCopyRight;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andyg
 */
public class DirectorSellCopyrightPanel extends javax.swing.JPanel {

    /**
     * Creates new form DirectorSellCopyrightPanel
     */
    private JPanel card;
    private EcoSystem business;
    private Organization organization;
    private UserAccount userAccount;
    public DirectorSellCopyrightPanel(JPanel card,EcoSystem business,UserAccount userAccount,Organization organization) {
        initComponents();
        this.card=card;
        this.business=business;
        this.userAccount=userAccount;
        this.organization=organization;
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel dtm=(DefaultTableModel)requestTable.getModel();
        dtm.setRowCount(0);
        for(Network network:business.getNetworkslist()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseslist()){
                if(enterprise instanceof TheaterEnterprise){
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organization instanceof TheaterManagerOrganization){
                            for(UserAccount account:organization.getUserAccountDirectory().getUserAccountList()){
                                for(WorkRequest request:account.getWorkQueue().getWorkRequestList()){
                                    if(request instanceof RequestForCopyRight){
                                    RequestForCopyRight request2=(RequestForCopyRight)request;
                                    Object row[]=new Object[5];
                                    row[0]=request2;
                                    row[1]=request2.getInvestment();
                                    row[2]=request2.getReceiver();
                                    row[3]=request2.getSender();
                                    row[4]=request2.getStatus()=="Approved"?request2.getStatus():"Pending";
                                    dtm.addRow(row);
                                }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();

        jPanel1 = new JPanel (){
            protected void paintComponent(Graphics g){
                super.paintComponent(g);
                Image img=Toolkit.getDefaultToolkit().getImage("bgfilm.png");
                g.drawImage(img, 0, 0, this.getParent().getWidth(), this.getParent().getHeight(), this);
            }
        };

        backButton.setBackground(new java.awt.Color(153, 153, 153));
        backButton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        backButton.setText("< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jButton1.setText("Approved");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Request for copyright");

        requestTable.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Investment", "Receiver", "Sender", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(628, 628, 628)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jButton1)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        card.remove(this);
        CardLayout layout=(CardLayout)card.getLayout();
        layout.previous(card);
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedrow=requestTable.getSelectedRow();
        if(selectedrow<0){
            JOptionPane.showMessageDialog(null, "Please select an row first.");
            return;
        }
        RequestForCopyRight request=(RequestForCopyRight)requestTable.getValueAt(selectedrow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Approved");
        Movie movie=request.getMovie();
        for(Network network:business.getNetworkslist()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseslist()){
                if(enterprise instanceof TheaterEnterprise){
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organization instanceof TheaterManagerOrganization){
                            for(UserAccount account:organization.getUserAccountDirectory().getUserAccountList()){
                                account.getMovielist().getMovieList().add(movie);
                            }
                        }
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Approved successfully!");
        populateRequestTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
