/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Supplier;

import Business.Costume.Costume;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MovieManufactureEnterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.Network;
import Business.Organization.CostumeOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierManagerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestForCostume;

import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static javax.xml.bind.DatatypeConverter.parseInteger;

/**
 *
 * @author dell
 */
public class ManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagerWorkAreaJPanel
     */
    
    private JPanel card;
    private EcoSystem business;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private Costume costume;
    public ManagerWorkAreaJPanel(JPanel card,EcoSystem business,UserAccount userAccount,Organization organization,Enterprise enterprise) {
        initComponents();
        this.business=business;
        this.card=card;
        this.userAccount=userAccount;
        this.organization=organization;
        this.enterprise=enterprise;
        this.costume=costume;
        populateRequestTable();
    }

    
     public void populateRequestTable(){
        DefaultTableModel dtm=(DefaultTableModel)requestTable.getModel();
        dtm.setRowCount(0);
        for(Network network:business.getNetworkslist()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseslist()){
                if(enterprise instanceof MovieManufactureEnterprise){
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organization instanceof CostumeOrganization){
                            for(UserAccount account:organization.getUserAccountDirectory().getUserAccountList()){
                                for(WorkRequest request:account.getWorkQueue().getWorkRequestList()){
                                    if(request instanceof RequestForCostume){
                                    RequestForCostume request2=(RequestForCostume)request;
                                     Object row[]=new Object[6];
                                    row[0]=request2;
                                    row[1]=request2.getSender();
                                    row[2]=request2.getNumber();
                                    row[3]=request2.getCostume().getPrice();
                                    row[4]=request2.getReceiver();
                                    row[5]=request2.getStatus();
                                    
                                    dtm.addRow(row);
                                }
                                }
                            }
                        }
                    }
                }
            }
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        ApproveButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jPanel1 = new JPanel (){
            protected void paintComponent(Graphics g){
                super.paintComponent(g);
                Image img=Toolkit.getDefaultToolkit().getImage("supplier1.png");
                g.drawImage(img, 0, 0, this.getParent().getWidth(), this.getParent().getHeight(), this);
            }
        };

        requestTable.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Costume", "Sender", "Quantity", "Price", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestTable);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Request Table");

        assignJButton.setBackground(new java.awt.Color(153, 153, 153));
        assignJButton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        ApproveButton.setBackground(new java.awt.Color(153, 153, 153));
        ApproveButton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        ApproveButton.setText("Approve");
        ApproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Supplier Work Area");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(assignJButton)
                .addGap(80, 80, 80)
                .addComponent(ApproveButton)
                .addGap(84, 84, 84))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel2)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ApproveButton)
                    .addComponent(assignJButton))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = requestTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        WorkRequest request = (WorkRequest)requestTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateRequestTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void ApproveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveButtonActionPerformed
        int selectedRow = requestTable.getSelectedRow();
       
        if (selectedRow < 0){
            return;
        }

       RequestForCostume request = (RequestForCostume)requestTable.getValueAt(selectedRow, 0);
       request.setStatus("Approved");
        
        for(Network network:business.getNetworkslist()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseslist()){
                if(enterprise instanceof MovieManufactureEnterprise){
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organization instanceof CostumeOrganization){
                            for(UserAccount account:organization.getUserAccountDirectory().getUserAccountList()){
                                if(account.getUsername().toString().equals(request.getSender().toString()) ){
                                    
                                    for(Costume costume:account.getCostumeDirectory().getCostumelist()){
                                     if(costume.getName().toString().equals(request.getCostume().getName().toString())){
                                            costume.setNumber(request.getNumber()+costume.getNumber());
                                            
                                     }
                                        
                                    }
                                
                                    
                           }}}}}}}
       
populateRequestTable();
       
       // Costume costume = (Costume)requestTable.getValueAt(selectedRow, 0);
       // costume.setNumber(costume.getNumber()+request.getCostume().getNumber());

       
    }//GEN-LAST:event_ApproveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApproveButton;
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
